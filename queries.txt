/* QUERY 1: RENTENTION TABLE */-----------------------------------------------------------------------------

/* This query determines the total players joined for each day of a calendar year, 
* how many for each day were then retained, 
* and finally the fractional retention of those retained players. */

SELECT 
    joined AS day,
    COUNT(player_id) AS num_joined,
    SUM(retention_status) AS num_retained,
    ROUND((SUM(retention_status)/COUNT(player_id)), 2) * 100 AS fractional_rentention
FROM ( -- SUBQUERY BEGINS
    SELECT
        p.player_id,
        p.joined, 
        CASE              
            WHEN (MAX(m.day) - p.joined) >= 30 
            THEN 1 -- Retained
            ELSE 0 -- Not Retained 
        END AS retention_status
FROM 
    `projects-341322.sql_project_1.player_info`  p
JOIN 
    `projects-341322.sql_project_1.matches_info` m
        ON p.player_id = m.player_id 
    GROUP BY p.joined, p.player_id
    ) -- SUBQUERY ENDS
GROUP BY joined
ORDER BY joined ASC;

/* QUERY 2: AVG SPEND TABLE */-----------------------------------------------------------------------------

/* This query returns the average spend of players by age, 
* retention status (spend by retained vs not retained players), 
* and locations AS country below. This info will allow further
* analysis and visualization in Google Sheets. */

SELECT    
rt.retention_status AS player_status,
rt.age AS player_age,
rt.location,
ROUND(SUM(price) / COUNT(DISTINCT(rt.total_players)),2) AS avg_spend
FROM
    -- Retention table subquery below -- 
    (SELECT
        p.player_id AS total_players,
        p.age AS age,
        pch.item_id AS item, -- new key 
        p.location,
        CASE
        WHEN (MAX(m.day) - p.joined ) >= 30 
        THEN 'retained'
        ELSE 'not retained' 
    END
        AS Retention_Status
    FROM 
        `projects-341322.sql_project_1.player_info` as p
    LEFT JOIN  -- there are players missing in the below tables. Keep all player_info ids for correct count of all players 
        `projects-341322.sql_project_1.matches_info` as m
            ON p.player_id = m.player_id 
    LEFT JOIN
        `projects-341322.sql_project_1.purchase_info` as pch
            ON p.player_id = pch.player_id 
    GROUP BY
        p.player_id,
        age,
        p.joined,
        item,
        p.location
        ) AS rt -- alias of retention table
LEFT JOIN
    `projects-341322.sql_project_1.item_info` as i
    ON i.item_id=rt.item
GROUP BY 
    player_status, 
    player_age, 
    location
ORDER BY
    player_age;